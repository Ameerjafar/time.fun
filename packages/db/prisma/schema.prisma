// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  name           String          @unique
  role           ROLE
  profession     String?
  email          String?         @unique
  password       String?
  profilePicture String?
  verified       Boolean         @default(false)
  twitterId      String?         @unique
  twitterHandle  String?
  createdAt      DateTime        @default(now())
  lastLoggedAt   DateTime
  userHoldTokens UserHoldToken[]
  createdToken   Token?
  pricingModel   PricingModel?
}

model Message {
  id   String      @id @default(uuid())
  from String
  to   String
  date DateTime
  data String
  type MessageType
}

model UserHoldToken {
  id        String   @id @default(uuid())
  tokenId   String
  userId    String
  token     Decimal
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Token {
  id           String   @id @default(uuid())
  name         String
  symbol       String
  totalSupply  Int
  description  String?
  imageUrl     String
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  mintAddress  String?  @unique
  poolAddress  String?  @unique
  currentPrice Decimal? @default(0)
  initialPrice Decimal? @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model PricingModel {
  id                  String   @id @default(uuid())
  userId              String   @unique
  user                User     @relation(fields: [userId], references: [id])
  fixedDmPrice        Float?
  fixedGroupChatPrice Float?
  fixedVideoCallPrice Float?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

enum ROLE {
  USER
  CREATOR
}

enum MessageType {
  P2PMESSAGE
  GROUPMESSAGE
}
